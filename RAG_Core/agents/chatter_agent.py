from typing import Dict, Any, List
from models.llm_model import llm_model
from config.settings import settings


class ChatterAgent:
    def __init__(self):
        self.name = "CHATTER"
        self.prompt_template = """B·∫°n l√† m·ªôt chuy√™n vi√™n t∆∞ v·∫•n kh√°ch h√†ng ng∆∞·ªùi Vi·ªát Nam th√¢n thi·ªán v√† chuy√™n nghi·ªáp - chuy√™n gia x·ª≠ l√Ω c·∫£m x√∫c v√† an ·ªßi kh√°ch h√†ng.

Nhi·ªám v·ª•: An ·ªßi, l√†m d·ªãu c·∫£m x√∫c ti√™u c·ª±c c·ªßa kh√°ch h√†ng v√† cung c·∫•p th√¥ng tin li√™n h·ªá h·ªó tr·ª£.

N·ªôi dung kh√°ch h√†ng: "{question}"
L·ªãch s·ª≠ h·ªôi tho·∫°i: {history}
S·ªë ƒëi·ªán tho·∫°i h·ªó tr·ª£: {support_phone}

H∆∞·ªõng d·∫´n:
1. Th·ªÉ hi·ªán s·ª± th√¥ng c·∫£m v√† hi·ªÉu bi·∫øt c·∫£m x√∫c kh√°ch h√†ng
2. Xin l·ªói m·ªôt c√°ch ch√¢n th√†nh
3. ƒê·∫£m b·∫£o s·∫Ω c·∫£i thi·ªán d·ªãch v·ª•
4. Cung c·∫•p s·ªë hotline ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ tr·ª±c ti·∫øp
5. Gi·ªØ th√°i ƒë·ªô ·∫•m √°p, chuy√™n nghi·ªáp

Tr·∫£ l·ªùi:"""

    def process(self, question: str, history: List[str] = None, **kwargs) -> Dict[str, Any]:
        """X·ª≠ l√Ω c·∫£m x√∫c ti√™u c·ª±c c·ªßa kh√°ch h√†ng"""
        try:
            history_text = "\n".join(history) if history else "Kh√¥ng c√≥ l·ªãch s·ª≠"

            prompt = self.prompt_template.format(
                question=question,
                history=history_text,
                support_phone=settings.SUPPORT_PHONE
            )

            answer = llm_model.invoke(prompt)

            # Fallback answer
            if not answer or len(answer.strip()) < 10:
                answer = f"""T√¥i r·∫•t hi·ªÉu c·∫£m x√∫c c·ªßa b·∫°n v√† ch√¢n th√†nh xin l·ªói v·ªÅ nh·ªØng b·∫•t ti·ªán n√†y.

√ù ki·∫øn c·ªßa b·∫°n r·∫•t quan tr·ªçng v·ªõi ch√∫ng t√¥i v√† ch√∫ng t√¥i s·∫Ω kh√¥ng ng·ª´ng c·∫£i thi·ªán ƒë·ªÉ mang ƒë·∫øn tr·∫£i nghi·ªám t·ªët h∆°n.

ƒê·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ tr·ª±c ti·∫øp v√† gi·∫£i quy·∫øt nhanh ch√≥ng, b·∫°n vui l√≤ng li√™n h·ªá:
üìû Hotline: {settings.SUPPORT_PHONE}

ƒê·ªôi ng≈© chuy√™n vi√™n s·∫Ω h·ªó tr·ª£ b·∫°n 24/7. C·∫£m ∆°n b·∫°n ƒë√£ chia s·∫ª!"""

            return {
                "status": "SUCCESS",
                "answer": answer,
                "references": [{"document_id": "support_contact", "type": "SUPPORT"}],
                "next_agent": "end"
            }

        except Exception as e:
            return {
                "status": "ERROR",
                "answer": f"T√¥i hi·ªÉu b·∫°n ƒëang kh√¥ng h√†i l√≤ng. Vui l√≤ng li√™n h·ªá {settings.SUPPORT_PHONE} ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ t·ªët nh·∫•t.",
                "references": [],
                "next_agent": "end"
            }